name: CI

on:
  pull_request:
    branches: [ main ]
    types: [opened, labeled, unlabeled, synchronize]
  push:
    branches: [ main ]

jobs:
  check_label:
    runs-on: sh_devmil_mac
    steps:
      - uses: mheap/github-action-required-labels@v1
        if: github.ref != 'refs/heads/main'
        with:
          mode: exactly
          count: 0
          labels: "not ready"

  analysis:
    needs: check_label
    runs-on: sh_devmil_mac

    steps:
      - uses: actions/checkout@v3

      - uses: kuhnroyal/flutter-fvm-config-action@v1
        with:
          path: 'tool/.fvm/fvm_config.json'

      - uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'any'
          cache-path: '${{ runner.tool_cache }}/flutter-${{ env.FLUTTER_VERSION }}'

      - name: Verify formatting
        run: cd tool && dart format --set-exit-if-changed .

      - name: Install dependencies
        run: cd tool && dart pub get

      - name: Analyze project source
        run: cd tool && dart analyze

  test:
    needs: check_label
    strategy:
      matrix:
        platform: [sh_devmil_mac] # , ubuntu-latest
    runs-on: ${{ matrix.platform }}
    
    steps:
      - uses: actions/checkout@v3

      - uses: kuhnroyal/flutter-fvm-config-action@v1
        with:
          path: 'tool/.fvm/fvm_config.json'

      - uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'any'
          cache-path: '${{ runner.tool_cache }}/flutter-${{ env.FLUTTER_VERSION }}'

      - name: Install dependencies
        run: cd tool && dart pub get

      - name: Run tests
        run: cd tool &&  dart test 

  pana:
    needs: check_label
    runs-on: sh_devmil_mac

    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v1.5.3

      - uses: kuhnroyal/flutter-fvm-config-action@v1
        with:
          path: 'tool/.fvm/fvm_config.json'

      - uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'any'
          cache-path: '${{ runner.tool_cache }}/flutter-${{ env.FLUTTER_VERSION }}'

      - name: Install Dependencies
        run: |
          cd tool
          dart pub get
          dart pub global activate pana 0.21.14

      - name: Verify Pub Score
        run: |
          cd tool
          dart --version
          flutter --version
          PANA=$(pana . --no-warning); PANA_SCORE=$(echo $PANA | sed -n "s/.*Points: \([0-9]*\)\/\([0-9]*\)./\1\/\2/p")
          echo "score: $PANA_SCORE"
          IFS='/'; read -a SCORE_ARR <<< "$PANA_SCORE"; SCORE=SCORE_ARR[0]; TOTAL=SCORE_ARR[1]
          if (( $SCORE < $TOTAL - 30 )); then echo $PANA; echo "minimum score not met!"; exit 1; fi
